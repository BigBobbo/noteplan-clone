/* ========================================
   NOTEPLAN TASK STYLING
   ======================================== */

/* NotePlan task container */
.ProseMirror [data-noteplan-task="true"] {
  display: flex;
  align-items: flex-start;
  padding: 0.25rem 0;
  margin: 0.25rem 0;
  position: relative;
  transition: background-color 0.15s ease;
  cursor: pointer;
}

/* Task checkbox marker */
.ProseMirror .task-checkbox {
  display: inline-block;
  margin-right: 0.5rem;
  font-family: monospace;
  font-size: 1rem;
  line-height: 1.5;
  user-select: none;
  min-width: 2rem;
  text-align: center;
  color: var(--color-accent, #f59e0b);
  font-weight: bold;
  cursor: pointer;
}

/* Task content */
.ProseMirror .task-content {
  flex: 1;
  min-width: 0;
}

/* ========================================
   NOTEPLAN TASK STATES
   ======================================== */

/* Open tasks - [] */
.ProseMirror .noteplan-task-open .task-checkbox {
  color: var(--color-accent, #f59e0b);
}

/* Completed tasks - [x] */
.ProseMirror .noteplan-task-completed .task-content {
  text-decoration: line-through;
  opacity: 0.5;
  color: #6b7280;
}

[data-theme='dark'] .ProseMirror .noteplan-task-completed .task-content {
  color: #9ca3af;
}

.ProseMirror .noteplan-task-completed .task-checkbox {
  color: #10b981;
}

/* Cancelled tasks - [-] */
.ProseMirror .noteplan-task-cancelled {
  opacity: 0.6;
}

.ProseMirror .noteplan-task-cancelled .task-content {
  text-decoration: line-through;
  color: #ef4444;
}

[data-theme='dark'] .ProseMirror .noteplan-task-cancelled .task-content {
  color: #f87171;
}

.ProseMirror .noteplan-task-cancelled .task-checkbox {
  color: #ef4444;
}

/* Scheduled tasks - [>] */
.ProseMirror .noteplan-task-scheduled {
  background-color: rgba(59, 130, 246, 0.05);
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

[data-theme='dark'] .ProseMirror .noteplan-task-scheduled {
  background-color: rgba(59, 130, 246, 0.1);
}

.ProseMirror .noteplan-task-scheduled .task-content {
  color: #1e40af;
  font-weight: 500;
}

[data-theme='dark'] .ProseMirror .noteplan-task-scheduled .task-content {
  color: #93c5fd;
}

.ProseMirror .noteplan-task-scheduled .task-checkbox {
  color: #3b82f6;
}

/* Important tasks - [!] */
.ProseMirror .noteplan-task-important {
  background-color: rgba(220, 38, 38, 0.05);
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-left: 3px solid #dc2626;
}

[data-theme='dark'] .ProseMirror .noteplan-task-important {
  background-color: rgba(220, 38, 38, 0.15);
}

.ProseMirror .noteplan-task-important .task-content {
  color: #991b1b;
  font-weight: 600;
}

[data-theme='dark'] .ProseMirror .noteplan-task-important .task-content {
  color: #fca5a5;
}

.ProseMirror .noteplan-task-important .task-checkbox {
  color: #dc2626;
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* Task hover effects */
.ProseMirror [data-noteplan-task="true"]:hover {
  background-color: rgba(249, 250, 251, 0.5);
  border-radius: 0.25rem;
}

[data-theme='dark'] .ProseMirror [data-noteplan-task="true"]:hover {
  background-color: rgba(55, 65, 81, 0.3);
}

/* Disable hover on completed/cancelled */
.ProseMirror .noteplan-task-completed:hover,
.ProseMirror .noteplan-task-cancelled:hover {
  background-color: transparent;
}

/* ========================================
   GFM TASK LIST STYLING (Legacy - kept for compatibility)
   ======================================== */

/* Task list container */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding-left: 0;
  margin: 0.5rem 0;
}

/* Task items */
.ProseMirror li[data-type="taskItem"] {
  display: flex;
  align-items: flex-start;
  padding: 0.25rem 0;
  margin: 0.25rem 0;
  position: relative;
  transition: background-color 0.15s ease;
}

/* Task checkbox */
.ProseMirror li[data-type="taskItem"] > label {
  display: flex;
  align-items: center;
  margin-right: 0.5rem;
  user-select: none;
}

.ProseMirror li[data-type="taskItem"] > label > input[type="checkbox"] {
  width: 1.125rem;
  height: 1.125rem;
  border-radius: 0.25rem;
  border: 2px solid;
  border-color: var(--color-accent, #f59e0b);
  background: transparent;
  cursor: pointer;
  transition: all 0.15s ease;
}

.ProseMirror li[data-type="taskItem"] > label > input[type="checkbox"]:hover {
  transform: scale(1.1);
  border-color: var(--color-accent-hover, #d97706);
}

.ProseMirror li[data-type="taskItem"] > label > input[type="checkbox"]:checked {
  background-color: var(--color-accent, #f59e0b);
  border-color: var(--color-accent, #f59e0b);
}

/* Task content */
.ProseMirror li[data-type="taskItem"] > div {
  flex: 1;
  min-width: 0;
}

/* ========================================
   NOTEPLAN TASK STATES
   ======================================== */

/* Completed tasks - [x] */
.ProseMirror li[data-type="taskItem"].task-state-completed > div {
  text-decoration: line-through;
  opacity: 0.5;
  color: #6b7280;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-completed > div {
  color: #9ca3af;
}

/* Cancelled tasks - [-] */
.ProseMirror li[data-type="taskItem"].task-state-cancelled {
  opacity: 0.6;
}

.ProseMirror li[data-type="taskItem"].task-state-cancelled > div {
  text-decoration: line-through;
  color: #ef4444;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-cancelled > div {
  color: #f87171;
}

.ProseMirror li[data-type="taskItem"].task-state-cancelled > label > input[type="checkbox"] {
  border-color: #ef4444;
  background-color: #fee2e2;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-cancelled > label > input[type="checkbox"] {
  background-color: #991b1b;
}

/* Scheduled tasks - [>] */
.ProseMirror li[data-type="taskItem"].task-state-scheduled {
  background-color: rgba(59, 130, 246, 0.05);
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-scheduled {
  background-color: rgba(59, 130, 246, 0.1);
}

.ProseMirror li[data-type="taskItem"].task-state-scheduled > div {
  color: #1e40af;
  font-weight: 500;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-scheduled > div {
  color: #93c5fd;
}

.ProseMirror li[data-type="taskItem"].task-state-scheduled > label > input[type="checkbox"] {
  border-color: #3b82f6;
}

/* Important tasks - [!] */
.ProseMirror li[data-type="taskItem"].task-state-important {
  background-color: rgba(220, 38, 38, 0.05);
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-left: 3px solid #dc2626;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-important {
  background-color: rgba(220, 38, 38, 0.15);
}

.ProseMirror li[data-type="taskItem"].task-state-important > div {
  color: #991b1b;
  font-weight: 600;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"].task-state-important > div {
  color: #fca5a5;
}

.ProseMirror li[data-type="taskItem"].task-state-important > label > input[type="checkbox"] {
  border-color: #dc2626;
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* ========================================
   NESTED TASKS & INDENTATION
   ======================================== */

/* Nested task lists */
.ProseMirror ul[data-type="taskList"] ul[data-type="taskList"] {
  margin-left: 1.5rem;
  border-left: 2px solid rgba(249, 115, 22, 0.2);
  padding-left: 0.5rem;
}

[data-theme='dark'] .ProseMirror ul[data-type="taskList"] ul[data-type="taskList"] {
  border-left-color: rgba(251, 146, 60, 0.3);
}

/* Task hover effects */
.ProseMirror li[data-type="taskItem"]:hover {
  background-color: rgba(249, 250, 251, 0.5);
  border-radius: 0.25rem;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"]:hover {
  background-color: rgba(55, 65, 81, 0.3);
}

/* Disable hover on completed/cancelled */
.ProseMirror li[data-type="taskItem"].task-state-completed:hover,
.ProseMirror li[data-type="taskItem"].task-state-cancelled:hover {
  background-color: transparent;
}

/* ========================================
   REGULAR BULLET LISTS (NON-TASKS)
   ======================================== */

.ProseMirror ul:not([data-type="taskList"]) {
  list-style: disc;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.ProseMirror ul:not([data-type="taskList"]) li {
  margin: 0.25rem 0;
}

.ProseMirror ol {
  list-style: decimal;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.ProseMirror ol li {
  margin: 0.25rem 0;
}

/* ========================================
   MIXED CONTENT SUPPORT
   ======================================== */

/* Task content with paragraphs */
.ProseMirror li[data-type="taskItem"] p {
  margin: 0.25rem 0;
}

/* Task content with code */
.ProseMirror li[data-type="taskItem"] code {
  background-color: rgba(0, 0, 0, 0.05);
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-family: 'Courier New', monospace;
  font-size: 0.875em;
}

[data-theme='dark'] .ProseMirror li[data-type="taskItem"] code {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Task content with links */
.ProseMirror li[data-type="taskItem"] a {
  color: var(--color-accent, #f59e0b);
  text-decoration: underline;
}

.ProseMirror li[data-type="taskItem"] a:hover {
  color: var(--color-accent-hover, #d97706);
}

/* ========================================
   TASK DETAILS VISUAL HIERARCHY
   ======================================== */

/* TaskDetails container - blockquote-style visual element */
.ProseMirror [data-task-details="true"] {
  position: relative;
  margin: 0.5rem 0 0.75rem 2rem;
  padding: 0.75rem 1rem;
  border-left: 3px solid;
  border-radius: 0 0.375rem 0.375rem 0;
  background-color: rgba(249, 250, 251, 0.5);
  transition: all 0.2s ease;
}

/* Dark theme */
[data-theme='dark'] .ProseMirror [data-task-details="true"] {
  background-color: rgba(55, 65, 81, 0.3);
}

/* Ocean theme */
[data-theme='ocean'] .ProseMirror [data-task-details="true"] {
  background-color: rgba(191, 219, 254, 0.3);
}

/* State-specific border colors */
.ProseMirror .task-details-open {
  border-left-color: #f59e0b; /* Amber */
}

.ProseMirror .task-details-completed {
  border-left-color: #10b981; /* Green */
  opacity: 0.6;
}

.ProseMirror .task-details-cancelled {
  border-left-color: #ef4444; /* Red */
  opacity: 0.6;
}

.ProseMirror .task-details-scheduled {
  border-left-color: #3b82f6; /* Blue */
  background-color: rgba(59, 130, 246, 0.08);
}

[data-theme='dark'] .ProseMirror .task-details-scheduled {
  background-color: rgba(59, 130, 246, 0.12);
}

.ProseMirror .task-details-important {
  border-left-color: #dc2626; /* Dark red */
  background-color: rgba(220, 38, 38, 0.08);
  border-left-width: 4px;
}

[data-theme='dark'] .ProseMirror .task-details-important {
  background-color: rgba(220, 38, 38, 0.15);
}

/* Connecting line from task to details */
.ProseMirror [data-noteplan-task="true"].has-details::after {
  content: '';
  position: absolute;
  left: 0.5rem;
  bottom: -0.5rem;
  width: 2px;
  height: 0.5rem;
  background-color: currentColor;
  opacity: 0.3;
}

/* Typography adjustments within task details */
.ProseMirror [data-task-details="true"] p {
  margin: 0.375rem 0;
  font-size: 0.9375rem;
  line-height: 1.6;
  color: #4b5563;
}

[data-theme='dark'] .ProseMirror [data-task-details="true"] p {
  color: #d1d5db;
}

.ProseMirror [data-task-details="true"] ul,
.ProseMirror [data-task-details="true"] ol {
  margin: 0.5rem 0;
  padding-left: 1.5rem;
}

.ProseMirror [data-task-details="true"] li {
  margin: 0.25rem 0;
  font-size: 0.9375rem;
}

/* Bold text in details */
.ProseMirror [data-task-details="true"] strong {
  color: #1f2937;
  font-weight: 600;
}

[data-theme='dark'] .ProseMirror [data-task-details="true"] strong {
  color: #f9fafb;
}

/* Hover effect */
.ProseMirror [data-task-details="true"]:hover {
  background-color: rgba(249, 250, 251, 0.8);
  border-left-width: 4px;
}

[data-theme='dark'] .ProseMirror [data-task-details="true"]:hover {
  background-color: rgba(55, 65, 81, 0.5);
}

/* Spacing between task and its details */
.ProseMirror [data-noteplan-task="true"] + [data-task-details="true"] {
  margin-top: 0.25rem;
}

/* Animation for details appearing */
.ProseMirror [data-task-details="true"] {
  animation: slideInFromLeft 0.2s ease-out;
}

@keyframes slideInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-0.5rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}